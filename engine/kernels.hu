#ifndef KERNELS_H
#define KERNELS_H

#include "typedefs.h"
#include "grid.hpp"


namespace kernels{
    void cudaFindGridCell(float* px, float* py, float* pz, uint numParticles, Grid grid, uint* gridPosition, cudaStream_t stream);

    void cudaFindSubCell(float* px, float* py, float* pz, uint numParticles, Grid grid, uint* gridPosition, uint* subCellPositionX, uint* subCellPositionY, uint* subCellPositionZ, uint refinementLevel, cudaStream_t stream);

    template <typename T>
    void cudaParallelPrefixSum(uint numElements, T* array, T* blockSums, cudaStream_t stream);

    void cudaRadixSortUint(uint numElements, uint* inArray, uint* outArray, uint* sortedIndices, uint* front, uint* back, cudaStream_t frontStream, cudaStream_t backStream);

    void cudaSortParticlesByGridNode(uint numParticles, uint*& gridPosition, cudaStream_t stream);

}



#endif