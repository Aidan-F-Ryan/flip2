#ifndef PARTICLES_H
#define PARTICLES_H

#include "typedefs.h"
#include "cudaVec.hu"
#include "algorithms/kernels.hu"

#define REFINEMENTLEVELS 10

class Particles{
public:
    Particles(uint size);

    void setDomain(float nx, float ny, float nz, uint x, uint y, uint z, float cellSize);

    void alignParticlesToGrid();
    void alignParticlesToSubCells();

    void sortParticles();

    void generateVoxels();

    void particleVelToVoxels();

    ~Particles();
private:
    CudaVec<float> px, py, pz;
    CudaVec<float> vx, vy, vz;
    CudaVec<uint> gridCell;
    CudaVec<uint> subCellsTouchedX, subCellsTouchedY, subCellsTouchedZ; //number of subcells touched by each particle
    CudaVec<uint> subCellsX, subCellsY, subCellsZ; //subcell index list, multiple subcells per particle allowed, indexed by subCellsTouched
    CudaVec<uint> reorderedGridIndices;

    CudaVec<uint> uniqueGridNodeIndices;
    CudaVec<uint> gridNodeIndicesToFirstParticleIndex;

    CudaVec<float> voxelsUx, voxelsUy, voxelsUz;

    uint refinementLevel;
    uint numVoxelsPerNode;
    uint numVoxels1D;
    uint size;
    float radius;
    Grid grid;
    cudaStream_t stream;

    friend class ParticleSystemTester;
};

#endif